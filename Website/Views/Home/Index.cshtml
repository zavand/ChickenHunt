@using ChickenHunt.Website.DataLayer
@model ChickenHunt.Website.Controllers.Home.Actions.Index.Model
@{
    ViewBag.Title = "Home";
}
<style>
    .jumbotron {
        background-color: #fff;
        padding: 0px;
    }
</style>
<div class="row text-center">
    <div class="col-md-12 col-sm-12">
        <img src="~/Content/Images/Logo.png"/>
    </div>
</div>
<div class="text-center hidden-print">
    <a href="@Url.RouteUrl(Model.GetRoute(), ChickenHunt.Website.Controllers.Home.Actions.Chicken2.Route.Create())" class="btn btn-default">
        <img src="~/Content/Images/LogoIcon.png"/> Report chicken</a>
</div>
<br/>
<table class="table table-hover table-responsive">
    <tr>
        <th>Hunter</th>

        @{
            var maxMonths = 6;
            {
                var d = DateTime.Today.AddDays(-DateTime.Today.Day + 1);

                for (int i = 0; i < maxMonths; i++)
                {
                    var d1 = d.AddMonths(-i);

                    var insertYear = false;

                    if (i == 0 && d.AddMonths(-i).Month>1 || d.AddMonths(-i).Year != d.AddMonths(-i + 1).Year)
                    {
                        insertYear = true;
                        //maxMonths--;
                        var a = 0;
                    }
                    if (insertYear)
                    {
                        <th class="text-center" style="background-color: gold;">
                            @d.AddMonths(-i).Year
                        </th>
                    }
                    <th class="text-center @(i > 0 ? "hidden-sm hidden-xs" : "")">
                        @d1.ToString("MMMM")<span class="visible-print-inline">@d1.ToString(", yyyy")</span></th>
                }
            }
        }
    </tr>

    @{
        var hunters = Model.Report.Select(m => new { m.HunterID, m.HunterName }).Distinct();
    var currentMonth = DateTime.Today.AddDays(-DateTime.Today.Day + 1);

    foreach (var hunter in hunters.OrderByDescending(m =>
    {
        var b = Model.Report.FirstOrDefault(a => a.HunterID == m.HunterID && a.Date == currentMonth);
        if (b == null)
            return 0;
        return b.Chickens;
    }))
    {
            <tr>
                <td>@Html.ActionLink(hunter.HunterName,Model.GetRoute(), ChickenHunt.Website.Controllers.Hunter.Actions.Index.Route.Create(hunter.HunterID))</td>
                @{
                    for (int i = 0; i < maxMonths; i++)
                    {
                        var month = currentMonth.AddMonths(-i);
                        var insertYear = false;

                        if (i== 0 && currentMonth.AddMonths(-i).Month > 1 || currentMonth.AddMonths(-i).Year != currentMonth.AddMonths(-i + 1).Year)
                        {
                            insertYear = true;
                            //maxMonths--;
                            var a = 0;
                        }

                        if (insertYear)
                        {
                            var year = currentMonth.AddMonths(-i).Year;
                            var repYear = Model.Report.Where(m => m.HunterID == hunter.HunterID && m.Date.Year == year).Sum(m=>m.Chickens);
                            var repYearMade = Model.Recent.Where(m=>m.DeletedByHunterID==null).Count(m => m.Date.Year == month.Year && (m.Maker1ID == hunter.HunterID || m.Maker2ID == hunter.HunterID));
                            <td style="background-color: khaki;" class="text-nowrap text-center">
                                @repYear.ToString("#,0") / @repYearMade.ToString("#,0")
                            </td>
                        }

                        var rep = Model.Report.FirstOrDefault(m => m.HunterID == hunter.HunterID && m.Date == month);
                        if (rep == null)
                        {
                            rep = new ChickenHuntReport
                            {
                                Chickens = 0,
                                Date = month,
                                Today = 0
                            };
                        }
                        var repMadeChickens = Model.Recent.Where(m => m.DeletedByHunterID == null).Count(m => m.Date.Year == month.Year && m.Date.Month == month.Month && (m.Maker1ID == hunter.HunterID || m.Maker2ID == hunter.HunterID));


                            <td class="text-center @(i > 0 ? "hidden-sm hidden-xs" : "")" @*style="@(rep.Chickens == 0 ? "color:#ddd;" : "")"*@>
                                <div class="text-center" style="display: inline-block;">
                                    <div>
                                        <span style="color: red;">@rep.Chickens</span> /
                                        <span style="color: green;">@repMadeChickens</span>
                                    </div>
                                    @if (rep.Chickens >= 5)
                                    {
                                        <span>
                                            @for (int j = 0; j < rep.Chickens / 5; j++)
                                            {
                                                <img src="~/Content/Images/rating.png" title="@((j + 1) * 5)+"/>
                                            }
                                        </span>
                                    }
                                    @if (month == currentMonth && rep.Today > 0)
                                    {
                                        <div>
                                            <span class="label label-success"><i class="fa fa-line-chart" aria-hidden="true"></i> +@rep.Today</span>
                                        </div>
                                    }
                                </div>
                        </td>
                    }
                }
            </tr>
        }
    }
</table>
<h2 class="text-center"><a name="RecentChickens"></a>Recent chickens</h2>
@if (Model.Recent.Length == 0)
{
    <div class="alert alert-info">No records found</div>
}
else
{
    <text>
        <div class="row">
            <div class="col-sm-12 text-center">
                @{ var size = 10; }
                <a href="@Url.RouteUrl(Model.GetRoute(),ChickenHunt.Website.Controllers.Home.Actions.Index.Route.Create(size))#RecentChickens" class="btn btn-sm @(Model.RecentChickens == size ? " btn-primary" : " btn-default")">@size</a>
                @{ size = 20; }
                <a href="@Url.RouteUrl(Model.GetRoute(),ChickenHunt.Website.Controllers.Home.Actions.Index.Route.Create(size))#RecentChickens" class="btn btn-sm @(Model.RecentChickens == size ? " btn-primary" : " btn-default")">@size</a>
                @{ size = 25; }
                <a href="@Url.RouteUrl(Model.GetRoute(),ChickenHunt.Website.Controllers.Home.Actions.Index.Route.Create(size))#RecentChickens" class="btn btn-sm @(Model.RecentChickens == size ? " btn-primary" : " btn-default")">@size</a>
                @{ size = 50; }
                <a href="@Url.RouteUrl(Model.GetRoute(),ChickenHunt.Website.Controllers.Home.Actions.Index.Route.Create(size))#RecentChickens" class="btn btn-sm @(Model.RecentChickens == size ? " btn-primary" : " btn-default")">@size</a>
                @{ size = 100; }
                <a href="@Url.RouteUrl(Model.GetRoute(),ChickenHunt.Website.Controllers.Home.Actions.Index.Route.Create(size))#RecentChickens" class="btn btn-sm @(Model.RecentChickens == size ? " btn-primary" : " btn-default")">@size</a>
            </div>
        </div>
    </text>
    foreach (var c in Model.Recent.Take(Model.RecentChickens))
    {


        <div class="row" style="border: solid 1px @(c.DeletedByHunterID==null?"#eee":"red"); margin: 5px; background-color: @(c.DeletedByHunterID==null?"inherited":"mistyrose"); ">
            <div class="col-sm-4 col-xs-6 col-md-4">
                <div class="media">
                    <div class="media-left">
                        <img src="~/Content/Images/Maker.png"/>
                    </div>
                    <div class="media-body" style="text-decoration: @(c.DeletedByHunterID==null?"initial":"line-through");">
                        @c.Maker1Name<br/>@c.Maker2Name
                    </div>
                </div>
            </div>
            <div class="col-sm-4 col-xs-6 col-md-4">
                <div class="media">
                    <div class="media-left">
                        <img src="~/Content/Images/Recipient.png"/>
                    </div>
                    <div class="media-body" style="text-decoration: @(c.DeletedByHunterID==null?"initial":"line-through");">
                        @c.Recipient1Name <br/>@c.Recipient2Name
                    </div>
                </div>
            </div>
            <div class="col-sm-4 col-xs-12 col-md-4"><span class="pull-right text-right"><small>
                Reported by <strong>@c.ReporterName</strong> |

                @if (c.Date.Date == DateTime.Now.Date)
                {
                    <text>
                        <span class="label label-success">Today</span>
                    </text>
                }
                else
                {
                    @c.Date.ToLongDateString()
                }
                                                                                             <br />
                @if (c.DeletedByHunterID == null)
                {
                    if (User.Identity.IsAuthenticated && (DateTime.Now - c.Date) < TimeSpan.FromDays(2))
                    {
                        <text>
                            @Html.ActionLink("Delete", Model.GetRoute(), ChickenHunt.Website.Controllers.Home.Actions.DeleteChicken.Route.Create(c.ID), new {@class = "btn btn-xs btn-danger"})
                        </text>
                    }
                }
                else
                {
                    <text>
                        <span class="label label-danger">Deleted by @c.DeletedByHunterName</span>
                    </text>
}
            </small></span></div>
        </div>
    }
}
